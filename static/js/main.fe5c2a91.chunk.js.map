{"version":3,"sources":["features/PageLogin/LoginContainer.tsx","features/PageLogin/PageLogin.tsx","features/PageMain/PageMain.tsx","shared/components/PageNotFound/PageNotFound.tsx","shared/atoms/auth.ts","shared/constants/Routes.ts","shared/components/PublicRoute/PublicRoute.tsx","App.tsx","index.tsx"],"names":["LoginContainer","PageLogin","style","display","height","alignContent","PageMain","PageNotFound","persistAtom","recoilPersist","authAtom","atom","key","default","effects_UNSTABLE","Routes","PublicRoute","component","restricted","rest","useRecoilValue","to","App","path","exact","ReactDOM","render","fallback","basename","document","getElementById"],"mappings":"iKAAaA,EAAiB,WAC5B,OAAO,yBCCIC,EAAY,WACvB,OACE,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAASC,aAAc,UAA9D,SACE,cAAC,EAAD,OCLOC,EAAW,WACtB,OACE,8BACE,2CCDOC,EAAmB,WAC9B,OAAO,wD,uBCEDC,EAAgBC,0BAAhBD,YAEKE,EAAWC,eAAK,CAC3BC,IAAK,OAELC,QAAS,KACTC,iBAAkB,CAACN,KCXRO,EACJ,IADIA,EAEJ,S,6BCWIC,EAAc,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAAeC,EAAkB,iBAGxE,OAFaC,yBAAeV,IAEbQ,EACb,cAAC,IAAD,CAAUG,GAAIN,IAEd,cAAC,IAAD,aAAOE,UAAWA,GAAeE,KCXxBG,EAAM,WACjB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaC,KAAMR,EAAcS,OAAK,EAACP,UAAWX,IAClD,cAAC,EAAD,CAAaiB,KAAMR,EAAcG,YAAU,EAACM,OAAK,EAACP,UAAWhB,IAC7D,cAAC,EAAD,CAAagB,UAAWV,QCL9BkB,IAASC,OACP,cAAC,WAAD,CAAUC,SAAS,GAAnB,SACE,cAAC,aAAD,UACE,cAAC,IAAD,CAAeC,SAAS,QAAxB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.fe5c2a91.chunk.js","sourcesContent":["export const LoginContainer = () => {\n  return <div></div>;\n};\n","import { LoginContainer } from '~/features/PageLogin/LoginContainer';\n\nexport const PageLogin = () => {\n  return (\n    <div style={{ display: 'flex', height: '100vh', alignContent: 'center' }}>\n      <LoginContainer />\n    </div>\n  );\n};\n","export const PageMain = () => {\n  return (\n    <div>\n      <div>hello</div>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => {\n  return <div>404, Page Not Found!</div>;\n};\n","import { atom } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nimport { Auth } from '~/shared/types/user';\n\nconst { persistAtom } = recoilPersist();\n\nexport const authAtom = atom({\n  key: 'auth',\n  // get initial state from local storage to enable user to stay logged in\n  default: null as Auth,\n  effects_UNSTABLE: [persistAtom],\n});\n","export const Routes = {\n  INDEX: '/',\n  LOGIN: '/login',\n};\n","import { FC } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n\nimport { authAtom } from '~/shared/atoms';\nimport { Routes } from '~/shared/constants/Routes';\n\ninterface Props {\n  component: FC;\n  restricted?: boolean;\n  [propName: string]: unknown;\n}\n\nexport const PublicRoute = ({ component, restricted, ...rest }: Props) => {\n  const auth = useRecoilValue(authAtom);\n\n  return auth && restricted ? (\n    <Redirect to={Routes.INDEX} />\n  ) : (\n    <Route component={component} {...rest} />\n  );\n};\n","import { Switch } from 'react-router';\n\nimport { PageLogin } from '~/features/PageLogin';\nimport { PageMain } from '~/features/PageMain';\nimport { PageNotFound } from '~/shared/components/PageNotFound';\nimport { PublicRoute } from '~/shared/components/PublicRoute';\nimport { Routes } from '~/shared/constants/Routes';\n\nexport const App = () => {\n  return (\n    <Switch>\n      <PublicRoute path={Routes.INDEX} exact component={PageMain} />\n      <PublicRoute path={Routes.LOGIN} restricted exact component={PageLogin} />\n      <PublicRoute component={PageNotFound} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Suspense fallback=\"\">\n    <RecoilRoot>\n      <BrowserRouter basename=\"react\">\n        <App />\n      </BrowserRouter>\n    </RecoilRoot>\n  </Suspense>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}